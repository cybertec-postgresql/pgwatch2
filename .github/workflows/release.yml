name: Release
on:
  release:
    types: [created]
      
jobs:

  goreleaser:
    if: true # false to skip job during debug
    runs-on: ubuntu-latest
    steps:

    - name: Set up Golang
      uses: actions/setup-go@v3
      with:
        go-version: '1.17'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Unshallow
      run: git fetch --prune --unshallow

    - name: Release via goreleaser
      uses: goreleaser/goreleaser-action@master
      with:
        args: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    if: true # false to skip job during debug
    strategy:
      fail-fast: true
      matrix:
        image: ['', '-postgres', '-nonroot', '-daemon', '-db-bootstrapper']    
    runs-on: ubuntu-latest
    steps:

    - name: Check out code
      uses: actions/checkout@v3

    - name: Version strings
      id: version
      run: |
        echo "RELEASE_VERSION=$(echo "$GITHUB_REF_NAME#${GITHUB_SHA:0:6}")" >> $GITHUB_OUTPUT
        echo "RELEASE_TIME=$(git show -s --format=%cI HEAD)" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2       

    - name: Publish beta version to Registry
      if: ${{ contains(github.ref_name, 'beta') }}
      uses: elgohr/Publish-Docker-Github-Action@v4
      env:
        GIT_HASH: ${{ steps.version.outputs.RELEASE_VERSION }}
        GIT_TIME: ${{ steps.version.outputs.RELEASE_TIME }}     
      with:
        name: cybertec/pgwatch2${{ matrix.image }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: docker/Dockerfile${{ matrix.image }}
        buildargs: GIT_HASH,GIT_TIME
        tags: ${{ github.ref_name }}
        platforms: linux/amd64,linux/arm64

    - name: Publish "latest" tag to Registry
      if: ${{ !contains(github.ref_name, 'beta') }}
      uses: elgohr/Publish-Docker-Github-Action@v4
      env:
        GIT_HASH: ${{ steps.version.outputs.RELEASE_VERSION }}
        GIT_TIME: ${{ steps.version.outputs.RELEASE_TIME }}     
      with:
        name: cybertec/pgwatch2${{ matrix.image }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: docker/Dockerfile${{ matrix.image }}
        buildargs: GIT_HASH,GIT_TIME
        tags: "latest"
        platforms: linux/amd64,linux/arm64

    - name: Publish "X.X.X, X.X, X" tags to Registry
      if: ${{ !contains(github.ref_name, 'beta') }}
      uses: elgohr/Publish-Docker-Github-Action@v4
      env:
        GIT_HASH: ${{ steps.version.outputs.RELEASE_VERSION }}
        GIT_TIME: ${{ steps.version.outputs.RELEASE_TIME }}     
      with:
        name: cybertec/pgwatch2${{ matrix.image }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: docker/Dockerfile${{ matrix.image }}
        buildargs: GIT_HASH,GIT_TIME
        tag_semver: true
        platforms: linux/amd64,linux/arm64  